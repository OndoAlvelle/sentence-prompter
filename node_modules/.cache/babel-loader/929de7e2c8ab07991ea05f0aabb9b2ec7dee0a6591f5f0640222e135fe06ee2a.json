{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"wordListSelect\"\n}, \"Choose a Word List:\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"select\", {\n    id: \"wordListSelect\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedWordList = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.wordLists, wordList => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: wordList.id,\n      value: wordList.id\n    }, _toDisplayString(wordList.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedWordList]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getWords && $options.getWords(...args))\n  }, \"Get 5 Random Words\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.words, word => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: word\n    }, _toDisplayString(word), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";gCAEIA,oBAAuD;EAAhDC,GAAG,EAAC;AAAgB,GAAC,qBAAmB;;;uBADjDC,oBAOM,cANJC,UAAuD,kBACvDH,oBAES;IAFDI,EAAE,EAAC,gBAAgB;+DAAUC,sBAAgB;yBACnDH,oBAA0GI,6BAA/ED,eAAS,EAArBE,QAAQ;yBAAvBL,oBAA0G;MAAnEM,GAAG,EAAED,QAAQ,CAACH,EAAE;MAAGK,KAAK,EAAEF,QAAQ,CAACH;wBAAOG,QAAQ,CAACG,IAAI;2EAD3DL,sBAAgB,KAGrDL,oBAAqD;IAA5CW,OAAK,yCAAEC,+CAAQ;KAAE,oBAAkB,sBAC5CV,oBAAmDI,6BAAjCD,WAAK,EAAbQ,IAAI;yBAAdX,oBAAmD;MAAzBM,GAAG,EAAEK;IAAI,oBAAKA,IAAI","names":["_createElementVNode","for","_createElementBlock","_hoisted_1","id","$data","_Fragment","wordList","key","value","name","onClick","$options","word"],"sourceRoot":"","sources":["/Users/roc/Documents/Programes/sentence-prompter/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <label for=\"wordListSelect\">Choose a Word List:</label>\n    <select id=\"wordListSelect\" v-model=\"selectedWordList\">\n      <option v-for=\"wordList in wordLists\" :key=\"wordList.id\" :value=\"wordList.id\">{{ wordList.name }}</option>\n    </select>\n    <button @click=\"getWords\">Get 5 Random Words</button>\n    <p v-for=\"word in words\" :key=\"word\">{{ word }}</p>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash';\nexport default {\n  data() {\n    return {\n      wordLists: [\n        {\n          id: 1,\n          name: 'Fruit',\n          words: ['apple', 'banana', 'orange', 'pear', 'strawberry'],\n        },\n        {\n          id: 2,\n          name: 'Animals',\n          words: ['dog', 'cat', 'bird', 'fish', 'tiger'],\n        },\n        {\n          id: 3,\n          name: 'Colors',\n          words: ['red', 'blue', 'green', 'yellow', 'purple'],\n        },\n        {\n          id: 4,\n          name: 'Sports',\n          words: ['soccer', 'basketball', 'baseball', 'hockey', 'football'],\n        },\n        {\n          id: 5,\n          name: 'Weather',\n          words: ['sunny', 'cloudy', 'rainy', 'windy', 'snowy'],\n        },\n      ],\n      selectedWordList: null,\n      words: [],\n    };\n  },\n  methods: {\n    getWords() {\n      // Generate a list of 5 random words\n      this.words = this.generateWords(5);\n    },\n    generateWords(numWords) {\n      // This is just an example, so we'll use a hard-coded list of words\n      const wordList = ['apple', 'banana', 'orange', 'pear', 'strawberry'];\n\n      // Use the lodash library's _.shuffle function to randomly shuffle the list\n      const shuffledWords = _.shuffle(wordList);\n\n      // Return the first 'numWords' words from the shuffled list\n      return shuffledWords.slice(0, numWords);\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}