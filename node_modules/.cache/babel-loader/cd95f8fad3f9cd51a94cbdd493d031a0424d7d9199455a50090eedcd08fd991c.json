{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"List:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"n5\\\">N5</option><option value=\\\"n4\\\">N4</option><option value=\\\"n3\\\">N3</option><option value=\\\"n2\\\">N2</option><option value=\\\"n1\\\">N1</option>\", 5);\nconst _hoisted_7 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.randomWords, word => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: word\n    }, _toDisplayString(word), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedList = $event)\n  }, _hoisted_7, 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedList]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.generateWords && $options.generateWords(...args))\n  }, \"Generate words\")]);\n}","map":{"version":3,"mappings":";gCAEIA,oBAAY,WAAT,OAAK;;oBAGNC,UAA8B;;uBAJlCC,oBAYM,cAXJC,UAAY,qBACZD,oBAAyDE,6BAAvCC,iBAAW,EAAnBC,IAAI;yBAAdJ,oBAAyD;MAAzBK,GAAG,EAAED;IAAI,oBAAKA,IAAI;kDAClDN,oBAMS;+DANQK,kBAAY;yDAAZA,kBAAY,KAQ7BL,oBAAsD;IAA7CQ,OAAK,yCAAEC,yDAAa;KAAE,gBAAc","names":["_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_Fragment","$data","word","key","onClick","$options"],"sourceRoot":"","sources":["/Users/roc/Documents/Programes/sentence-prompter/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <p>List:</p>\n    <p v-for=\"word in randomWords\" :key=\"word\">{{ word }}</p>\n    <select v-model=\"selectedList\">\n      <option value=\"n5\">N5</option>\n      <option value=\"n4\">N4</option>\n      <option value=\"n3\">N3</option>\n      <option value=\"n2\">N2</option>\n      <option value=\"n1\">N1</option>\n    </select>\n\n    <button @click=\"generateWords\">Generate words</button>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash';\nexport default {\n  data() {\n    return {\n      selectedList: 'n5',\n      n5: ['apple', 'banana', 'orange', 'grape', 'strawberry', 'a', 'b', 's', 'd', 'f', 'g'],\n      n4: ['car', 'bike', 'truck', 'bus', 'train', '1', '2', '3', '4', '5'],\n      n3: ['car', 'bike', 'truck', 'bus', 'train', '1', '2', '3', '4', '5'],\n      n2: ['car', 'bike', 'truck', 'bus', 'train', '1', '2', '3', '4', '5'],\n      n1: ['car', 'bike', 'truck', 'bus', 'train', '1', '2', '3', '4', '5'],\n      randomWords: []\n    }\n  },\n  methods: {\n    generateWords() {\n      const currentList = this[this.selectedList];\n      \n      const shuffledWords = _.shuffle(currentList); // TODO: Make it possible to display words from lower levels\n      this.randomWords = shuffledWords.slice(0, 5);\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}